$menuColor: $mainColor;//text
$menuBackground: $secondColor;//background
$iconMenuColor: $mainColor;//burger button

.header {
	&__logo {
		position: relative;//burger
		z-index: 5;//burger
	}
}
.menu {
	&__body {
		@media (max-width:$mobile){//burger
			display: grid;
			grid-template-rows: 1fr auto;
			gap: toRem(25);
			position: fixed;
			width: 100%;
			height: 100%;
			top: 0;
			left: -100%;
			overflow: auto;
			background-color: $menuBackground; 
			padding: toRem(100) toRem(15) toRem(30) toRem(15);
			transition: left 0.3s;
			&::before{//подложка безопасности, чтобы пункты меню не налазили на логотип, а появлялась прокрутка
				content:'';
				position: fixed;
				width: 100%;
				@include adaptiveValue("height", 110, 60);//должно совпадать с высотой header
				top: 0;
				left: -100%;
				z-index: 2;
				background-color: $menuBackground;
				transition: left 0.3s;
			}
			.menu-open & {
				left: 0;
				&::before{
					left: 0;
				}
			}
		}
	}
	&__list {
		@media (max-width:$mobile){//burger
			flex-direction: column;
			column-gap: toRem(20);
		}
	}
	&__item {
		text-align: right;
	}
	&__link {
		display: inline-block;//burger
		@media (max-width:$mobile){//burger
			color: $menuColor;//перепишется в header.scss
			font-size: toRem(28);
		}
	}
}

//Burger
.icon-menu {
	display: none;
	@media (max-width: $mobile) {
		display: block;
		position: relative;
		width: toRem(30);
		flex: 0 0 toRem(30);
		height: toRem(18);
		z-index: 5;
		@media (any-hover: none) {
			cursor: default;
		}
		span,
		&::before,
		&::after {
			content: "";
			transition: all 0.3s ease 0s;
			right: 0;
			position: absolute;
			width: 100%;
			height: toRem(2);
			background-color: $iconMenuColor;
			.menu-open & {
				background-color: $iconMenuColor;
			}
		}
		&::before {
			top: 0;
		}
		&::after {
			bottom: 0;
		}
		span {
			top: calc(50% - toRem(1));
		}
		.menu-open & {
			span {
				width: 0;
			}
			&::before {
				top: calc(50% - toRem(1));
				transform: rotate(-45deg);
			}
			&::after {
				bottom: calc(50% - toRem(1));
				transform: rotate(45deg);
			}
		}
	}
}
